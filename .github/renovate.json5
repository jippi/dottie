{
  extends: [
    "config:recommended",
    ":pinDevDependencies",
    ":separateMultipleMajorReleases",
    "default:pinDigestsDisabled",
  ],
  schedule: [
    "* */1 * * *", // every 1 hour
  ],
  postUpdateOptions: ["gomodTidy", "gomodUpdateImportPaths"],
  commitMessageSuffix: " in {{packageFile}}",
  dependencyDashboardAutoclose: false,
  automerge: true,
  baseBranches: ["main"],
  platformAutomerge: true,
  labels: ["dependencies"],
  prHourlyLimit: 1,
  osvVulnerabilityAlerts: true,
  vulnerabilityAlerts: {
    enabled: true,
    labels: ["security"],
  },
  packageRules: [
    {
      matchPackageNames: ["go", "golang"],
      groupName: "go",
    },
    {
      matchDatasources: ["golang-version"],
      rangeStrategy: "bump",
      groupName: "go",
      prPriority: 999,
    },
    {
      matchManagers: ["gomod"],
      matchDepTypes: ["indirect"],
      enabled: true,
    },
    {
      description: "Group charmbracelet packages",
      matchPackageNames: ["github.com/charmbracelet/{/,}**"],
      groupName: "charmbracelet",
    },
    {
      description: "Group googleapis packages",
      matchPackageNames: ["google.golang.org/genproto/googleapis/{/,}**"],
      groupName: "googleapis",
    },
    {
      description: "Group golang.org/x/ packages",
      matchPackageNames: ["golang.org/x/{/,}**"],
      groupName: "x",
    },
  ],
  customManagers: [
    {
      customType: "regex",
      fileMatch: ["(^|/)Dockerfile$", "(^|/)Dockerfile\\.[^/]*$"],
      matchStrings: [
        // example:
        //
        // # renovate: datasource=github-releases depName=hashicorp/terraform versioning=hashicorp
        // ENV DEFAULT_TERRAFORM_VERSION=x.x.x
        //
        // # renovate: datasource=github-releases depName=open-policy-agent/conftest
        // ARG DEFAULT_CONFTEST_VERSION=x.x.x
        "renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s(ARG|ENV) .*?_VERSION=(?<currentValue>.*)\\s",
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
    {
      customType: "regex",
      fileMatch: ["^\\.github/workflows/[^/]+\\.ya?ml$"],
      matchStrings: [
        "renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\\s.*?: (?<currentValue>.*)\\s",
      ],
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
  ],
}
